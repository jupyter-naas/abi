.ctaContent {
  max-width: var(--bob-width-2xl);
  margin: 0 auto;
  text-align: center;
  padding: var(--bob-space-2xl) var(--bob-space-lg);
  position: relative;
  z-index: 10;
}

/* Remove the decorative circles */
.ctaContent::before,
.ctaContent::after {
  display: none;
}

/* Knowledge Graph Background */
:global(.section--cta) {
  background: linear-gradient(135deg, 
    var(--ifm-background-color) 0%,
    var(--ifm-background-surface-color) 100%
  );
  position: relative;
  overflow: hidden;
  min-height: 600px;
  padding: 6rem 0;
}

/* Semi-transparent overlay */
.graphOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.85);
  z-index: 2;
  pointer-events: none;
}

.graphBackground {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  min-height: 600px;
  background: transparent;
}

/* vis.js custom styles */
:global(.vis-network) {
  outline: none;
  background: transparent;
}

:global(.vis-network:focus) {
  outline: none;
}

/* Custom tooltip styles */
:global(.vis-tooltip) {
  background-color: rgba(0, 0, 0, 0.8) !important;
  border-radius: 4px !important;
  color: white !important;
  padding: 8px 12px !important;
  font-size: 14px !important;
  border: none !important;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1) !important;
  z-index: 11 !important;
}

.nodeContainer {
  position: absolute;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
  animation: fadeIn 0.5s ease forwards;
  opacity: 0;
}

.graphNode {
  width: 16px;
  height: 16px;
  background: var(--ifm-color-primary);
  border-radius: 50%;
  box-shadow: 0 0 15px rgba(var(--ifm-color-primary-rgb), 0.6);
  position: relative;
}

.nodeLabel {
  font-size: 0.85rem;
  color: var(--ifm-color-emphasis-700);
  white-space: nowrap;
  opacity: 0.9;
  font-weight: 500;
}

/* Remove the old graphLine styles */
.graphConnection {
  position: absolute;
  pointer-events: none;
  opacity: 0;
  animation: drawLine 1s ease forwards;
  filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.3));
}

.graphConnection path {
  fill: none;
  stroke-width: 2px;
  stroke-linecap: round;
  stroke-dasharray: none;
  stroke-dashoffset: 0;
  animation: glowPath 3s ease-in-out infinite;
}

/* Update group colors for connections with higher opacity */
.graphConnection[data-group="1"] path { stroke: rgba(42, 140, 224, 0.8); }
.graphConnection[data-group="2"] path { stroke: rgba(52, 211, 153, 0.8); }
.graphConnection[data-group="3"] path { stroke: rgba(245, 158, 11, 0.8); }
.graphConnection[data-group="4"] path { stroke: rgba(139, 92, 246, 0.8); }
.graphConnection[data-group="5"] path { stroke: rgba(236, 72, 153, 0.8); }
.graphConnection[data-group="6"] path { stroke: rgba(99, 102, 241, 0.8); }

/* Add connecting points to nodes */
.graphNode::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 6px;
  height: 6px;
  background: white;
  border-radius: 50%;
  opacity: 0.8;
}

@keyframes glowPath {
  0% { opacity: 0.4; }
  50% { opacity: 1; }
  100% { opacity: 0.4; }
}

@keyframes fadeIn {
  from { opacity: 0; transform: translate(-50%, -50%) scale(0.8); }
  to { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

@keyframes drawLine {
  from { opacity: 0; transform: scaleX(0) rotate(var(--angle)); }
  to { opacity: 1; transform: scaleX(1) rotate(var(--angle)); }
}

.ctaText {
  font-size: var(--bob-font-2xl);
  line-height: 1.4;
  color: var(--ifm-color-emphasis-900);
  margin: 1.5rem auto var(--bob-space-2xl);
  font-weight: 300;
  position: relative;
  z-index: 10;
  max-width: 800px;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.ctaButtons {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  z-index: 10;
}

/* Connection dots */
.connectionDot {
  position: absolute;
  width: 6px;
  height: 6px;
  background: white;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  box-shadow: 0 0 8px rgba(255, 255, 255, 0.6);
  z-index: 2;
  animation: pulseDot 2s ease-in-out infinite;
}

@keyframes pulseDot {
  0% { transform: translate(-50%, -50%) scale(1); opacity: 0.6; }
  50% { transform: translate(-50%, -50%) scale(1.5); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(1); opacity: 0.6; }
}

/* Responsive styles */
@media (max-width: 1024px) {
  :global(.section--cta) {
    min-height: 500px;
  }

  .graphBackground {
    min-height: 500px;
  }

  .nodeLabel {
    font-size: 0.75rem;
  }

  .graphNode {
    width: 10px;
    height: 10px;
  }
}

@media (max-width: 768px) {
  .ctaContent {
    padding: var(--bob-space-xl) var(--bob-space-md);
  }

  .ctaText {
    font-size: var(--bob-font-xl);
    margin-bottom: var(--bob-space-xl);
  }
  
  .ctaButtons {
    flex-direction: column;
    gap: var(--bob-space-md);
  }

  .ctaButtons a {
    width: 100%;
  }

  .graphNode {
    width: 8px;
    height: 8px;
  }

  .nodeLabel {
    font-size: 0.7rem;
  }
}

/* Ensure the title is in front */
:global(.section--cta h2) {
  position: relative;
  z-index: 10;
  color: var(--ifm-color-emphasis-900);
  margin-bottom: 2rem;
  font-size: 2.5rem;
  font-weight: 600;
} 