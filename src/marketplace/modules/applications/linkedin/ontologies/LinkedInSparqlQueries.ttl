@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc11: <http://purl.org/dc/elements/1.1/> .
@prefix dc: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix bfo: <http://purl.obolibrary.org/obo/> .
@prefix cco: <https://www.commoncoreontologies.org/> .
@prefix intentMapping: <http://ontology.naas.ai/intentMapping/> .

intentMapping:searchLinkedInPostsQuery a intentMapping:TemplatableSparqlQuery ;
    rdfs:label "searchLinkedInPostsQuery"@en ;
    intentMapping:intentDescription "Search for LinkedIn posts containing a specific topic or keyword across title and content fields" ;
    intentMapping:sparqlTemplate """
        PREFIX abi: <http://ontology.naas.ai/abi/>
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

        SELECT DISTINCT ?post ?title ?content ?url ?published_date ?likes ?comments ?shares ?engagements ?views
        WHERE {
            ?post a abi:LinkedInPost ;
                    rdfs:label ?label ;
                    abi:title ?title ;
                    abi:content ?content ;
                    abi:url ?url ;
                    abi:published_date ?published_date ;
                    abi:likes ?likes ;
                    abi:comments ?comments ;
                    abi:shares ?shares ;
                    abi:engagements ?engagements ;
                    abi:views ?views .
                    
            FILTER(
                CONTAINS(LCASE(?label), LCASE("{{ topic }}")) ||
                CONTAINS(LCASE(?title), LCASE("{{ topic }}")) ||
                CONTAINS(LCASE(?content), LCASE("{{ topic }}"))
            )
        }
        ORDER BY DESC(?published_date)
        LIMIT 10
    """ ;
    intentMapping:hasArgument intentMapping:topicArg .

intentMapping:topicArg a intentMapping:QueryArgument ;
    intentMapping:argumentName "topic" ;
    intentMapping:argumentDescription "The topic or keyword to search for in LinkedIn posts" ;
    intentMapping:validationPattern "^[a-zA-Z0-9\\s-]{1,100}$" ;
    intentMapping:validationFormat "search_term" .

intentMapping:searchLinkedInPostsByDateQuery a intentMapping:TemplatableSparqlQuery ;
    rdfs:label "searchLinkedInPostsByDateQuery"@en ;
    intentMapping:intentDescription "Search for LinkedIn posts within a specific date range (end date defaults to current date)" ;
    intentMapping:sparqlTemplate """
        PREFIX abi: <http://ontology.naas.ai/abi/>
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
        PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

        SELECT DISTINCT ?post ?title ?content ?url ?published_date ?likes ?comments ?shares ?engagements ?views
        WHERE {
            ?post a abi:LinkedInPost ;
                    rdfs:label ?label ;
                    abi:title ?title ;
                    abi:content ?content ;
                    abi:url ?url ;
                    abi:published_date ?published_date ;
                    abi:likes ?likes ;
                    abi:comments ?comments ;
                    abi:shares ?shares ;
                    abi:engagements ?engagements ;
                    abi:views ?views .
                    
            FILTER(?published_date >= "{{ start_date }}"^^xsd:dateTime && 
                   ?published_date <= COALESCE("{{ end_date }}"^^xsd:dateTime, NOW()))
        }
        ORDER BY DESC(?published_date)
    """ ;
    intentMapping:hasArgument intentMapping:startDateArg, intentMapping:endDateArg .

intentMapping:startDateArg a intentMapping:QueryArgument ;
    intentMapping:argumentName "start_date" ;
    intentMapping:argumentDescription "The start date for filtering LinkedIn posts (format: YYYY-MM-DDThh:mm:ss)" ;
    intentMapping:validationPattern "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$" ;
    intentMapping:validationFormat "datetime" .

intentMapping:endDateArg a intentMapping:QueryArgument ;
    intentMapping:argumentName "end_date" ;
    intentMapping:argumentDescription "The end date for filtering LinkedIn posts (format: YYYY-MM-DDThh:mm:ss). Defaults to current date if not provided" ;
    intentMapping:validationPattern "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$" ;
    intentMapping:validationFormat "datetime" ;
    intentMapping:isOptional true .

