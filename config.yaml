# =============================================================================
# ABI System Configuration
# =============================================================================
#
# Production configuration for the NaasAI ABI System.
# Defines system settings, AI network topology, and operational pipelines.
#
# Structure:
#   config      - Core system parameters and API configuration
#   ai_network  - Module definitions with natural loading order
#   pipelines   - Scheduled automation workflows
#
# Module loading follows YAML order
# =============================================================================

config:
  api_description: Agentic Brain Infrastructure API
  api_title: ABI API
  cors_origins:
  - http://localhost:9879
  favicon_path: assets/favicon.ico
  github_project_id: 12
  github_project_repository: jupyter-naas/abi
  github_support_repository: jupyter-naas/abi
  logo_path: assets/logo.png
  space_name: abi
  storage_name: abi
  triple_store_path: storage/triplestore
  workspace_id: 96ce7ee7-e5f5-4bca-acf9-9d5d41317f81

# Logging Configuration
logging:
  level: DEBUG  # Highest level of detail
  format: "%(asctime)s | %(levelname)-8s | %(name)s:%(funcName)s:%(lineno)d - %(message)s"
  console_output: true
  file_output: true  # Enable file logging by default - captures everything from terminal
  file_path: "storage/datastore/utils/logs/{timestamp}_abi_logs.txt"  # {timestamp} = YYYYMMDDTHHMMSS

ai_network:
  abi:
    enabled: true
    description: "Multi-agent orchestrator and strategic advisor"
    strengths: "Multi-agent orchestration, strategic advisory, conversation flow management"
    use_when: "Identity questions, strategic consulting, meta-system questions, agent coordination"
    intent_mapping:
      abi:
        - "call supervisor"
        - "talk to abi"
        - "back to abi"
        - "supervisor"
        - "return to supervisor"
        - "ask abi"
        - "use abi"
        - "switch to abi"
        - "parler à abi"
        - "retour à abi"
        - "superviseur"
        - "demander à abi"
        - "can i talk back to abi"
        - "go back to abi"
        - "return to abi"
        - "back to supervisor"
        - "who are you"
        - "what is abi"
        - "who made you"
        - "identity questions"
        - "strategic consulting"
        - "meta-system questions"
      chatgpt:
        - "ask openai"
        - "ask chatgpt"
        - "use openai"
        - "use chatgpt"
        - "switch to openai"
        - "switch to chatgpt"
        - "openai gpt"
        - "gpt-4o"
        - "gpt4"
        - "web search"
        - "search the internet"
        - "online search"
        - "real-time search"
        - "current information"
        - "latest updates"
        - "search the web"
        - "current events"
        - "latest news"
        - "real-time information"
      gemini:
        - "use gemini"
        - "switch to gemini"
        - "google ai"
        - "google gemini"
        - "gemini 2.0"
        - "gemini flash"
        - "use google ai"
        - "switch to google"
        - "ask gemini"
        - "use google gemini"
        - "multimodal analysis"
        - "analyze image"
        - "image understanding"
        - "video analysis"
        - "audio analysis"
        - "generate image"
        - "create image"
        - "generate an image"
        - "create a picture"
        - "make an image"
        - "draw"
        - "illustrate"
        - "picture of"
        - "image of"
        - "visual representation"
        - "let's use google"
        - "try google ai"
        - "google's model"
        - "google's ai"
        - "use bard"
        - "switch to bard"
        - "generate an image of"
        - "create an image of"
        - "make a picture of"
        - "show me"
        - "visualization"
      grok:
        - "use grok"
        - "switch to grok"
        - "xai"
        - "grok 4"
        - "maximum intelligence"
        - "highest intelligence"
        - "use xai"
        - "switch to xai"
        - "ask grok"
        - "truth seeking"
        - "contrarian analysis"
        - "scientific reasoning"
      claude:
        - "ask claude"
        - "use claude"
        - "switch to claude"
        - "claude 3.5"
        - "anthropic"
        - "anthropic claude"
        - "claude sonnet"
      mistral:
        - "ask mistral"
        - "use mistral"
        - "switch to mistral"
        - "mistral ai"
        - "mistral large"
        - "french ai"
      perplexity:
        - "ask perplexity"
        - "use perplexity"
        - "switch to perplexity"
        - "perplexity ai"
        - "research"
        - "fact check"
        - "search web"
        - "latest information"
        - "current events"
        - "web research"
        - "search internet"
        - "search online"
      llama:
        - "ask llama"
        - "use llama"
        - "switch to llama"
        - "llama 3.3"
        - "meta ai"
        - "meta llama"
        - "local ai"
        - "private reasoning"
        - "private code"
      qwen:
        - "ask qwen"
        - "use qwen"
        - "switch to qwen"
        - "qwen code"
      deepseek:
        - "ask deepseek"
        - "use deepseek"
        - "switch to deepseek"
        - "complex reasoning"
        - "logical analysis"
        - "step by step"
        - "mathematical proof"
      gemma:
        - "ask gemma"
        - "use gemma"
        - "switch to gemma"
        - "quick question"
        - "fast response"
        - "lightweight ai"
        - "local gemini"
        - "private chat"
        - "offline ai"
        - "private ai"


  chatgpt:
    enabled: true
    description: "OpenAI's ChatGPT for general conversation and tasks"
    strengths: "General conversation, creative writing, problem solving, coding assistance"
    use_when: "General questions, creative tasks, coding help, explanations"

  gemini:
    enabled: true
    description: "Google's Gemini for advanced reasoning and multimodal tasks"
    strengths: "Advanced reasoning, multimodal understanding, code analysis, research"
    use_when: "Complex analysis, multimodal content, advanced reasoning tasks"

  claude:
    enabled: true
    description: "Anthropic's Claude for thoughtful analysis and writing"
    strengths: "Thoughtful analysis, ethical reasoning, long-form writing"
    use_when: "Ethical questions, detailed analysis, thoughtful responses"

  mistral:
    enabled: true
    description: "Mistral AI for efficient and focused responses"
    strengths: "Efficient processing, focused responses, multilingual support"
    use_when: "Quick responses, multilingual tasks, efficient processing"

  perplexity:
    enabled: true
    description: "Perplexity for research and fact-checking"
    strengths: "Research, fact-checking, current information, citations"
    use_when: "Research tasks, fact verification, current events"

  grok:
    enabled: true
    description: "xAI's Grok for truth-seeking and unfiltered analysis"
    strengths: "Truth-seeking, unfiltered analysis, current events, controversial topics"
    use_when: "Truth verification, controversial topics, unbiased analysis, current affairs"

  llama:
    enabled: false
    description: "Meta's Llama for local and private AI tasks"
    strengths: "Local processing, privacy-focused, instruction following, conversational dialogue"
    use_when: "Private tasks, local processing, instruction following"

  qwen:
    enabled: false
    description: "Alibaba's Qwen for code generation and analysis"
    strengths: "Code generation, code analysis, programming assistance, multilingual support"
    use_when: "Code generation, programming tasks, code analysis, multilingual tasks"

  deepseek:
    enabled: false
    description: "DeepSeek for complex reasoning and mathematical analysis"
    strengths: "Complex reasoning, logical analysis, mathematical proofs, step-by-step thinking"
    use_when: "Complex reasoning tasks, mathematical problems, logical analysis"

  gemma:
    enabled: false
    description: "Google's Gemma for lightweight AI tasks"
    strengths: "Lightweight processing, efficient responses, Google ecosystem"
    use_when: "Lightweight tasks, efficient processing, Google integration"
  
pipelines:
- cron: 0 0 * * *
  name: github.GithubIssuesPipeline
  parameters:
    - github_repository: https://github.com/jupyter-naas/abi
    - github_repository: https://github.com/jupyter-naas/docs
    - github_repository: https://github.com/jupyter-naas/naaspython
